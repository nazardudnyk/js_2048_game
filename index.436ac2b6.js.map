{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,E,I,A,W,M,A,U,wI,G,C,S,E,C,E,O,G,A,a,O,Q,E,W,G,O,S,O,C,C,S,E,C,C,C,E,G,G,G,A,U,O,E,O,E,E,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,G,CCEA,IAwBI,EAxBE,EAAM,CACV,KAAM,YACN,MAAO,aACP,KAAM,YACN,GAAI,SACN,EAIM,EAAS,SAAS,aAAa,CAAC,UAEhC,EAAe,SAAS,aAAa,CAAC,kBACtC,EAAc,SAAS,aAAa,CAAC,iBACrC,EAAa,SAAS,aAAa,CAAC,gBACpC,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAa,SAAS,aAAa,CAAC,eAEtC,EAAQ,CACV,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACb,CAGG,EAAQ,CAAA,EACR,EAAQ,EACN,EAAc,EAAI,EAAM,QAAQ,EAAE,GAAG,CAAC,SAAA,CAA5C,EAAoD,OAAA,EAAG,EAAI,QAAQ,C,GA6BnE,SAAS,IACP,EAAW,EAAM,KAAK,GAItB,IAAK,IAFD,EAAU,CAAA,EAEL,EAAI,EAAG,EAtDC,EAsDe,IAAK,CACnC,IAAK,IAAI,EAAI,EAAG,EAvDD,EAuDiB,IAC9B,GAAI,CAAK,CAAC,EAAE,CAAC,EAAE,GAAK,CAAQ,CAAC,EAAE,CAAC,EAAE,CAAE,CAClC,EAAU,CAAA,EACV,KACF,CAGF,GAAI,EACF,KAEJ,CAEA,GAAI,CAAC,EAAS,CACZ,IAOI,E,EAPW,GAOX,EAAa,EAAE,CAErB,EAAM,OAAO,CAAC,SAAC,CAAA,CAAK,CAApB,EACE,EAAI,OAAO,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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\nfunction _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _type_of(obj) {\n    \"@swc/helpers - typeof\";\n    return obj && typeof Symbol !== \"undefined\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar DIR = {\n    Left: \"ArrowLeft\",\n    Right: \"ArrowRight\",\n    Down: \"ArrowDown\",\n    Up: \"ArrowUp\"\n};\nvar magicValue = 4;\nvar button = document.querySelector(\"button\");\nvar messageStart = document.querySelector(\".message-start\");\nvar messageLose = document.querySelector(\".message-lose\");\nvar messageWin = document.querySelector(\".message-win\");\nvar field = document.querySelector(\"tbody\");\nvar scoreField = document.querySelector(\".game-score\");\nvar state = [\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ]\n];\nvar newState;\nvar isWin = false;\nvar score = 0;\nvar fieldMatrix = _to_consumable_array(field.children).map(function(row) {\n    return _to_consumable_array(row.children);\n});\nbutton.addEventListener(\"click\", buttonHandler);\ndocument.addEventListener(\"keydown\", move);\nfunction buttonHandler() {\n    if (button.classList.contains(\"start\")) {\n        button.classList.remove(\"start\");\n        button.classList.add(\"restart\");\n        button.innerText = \"Restart\";\n        messageStart.classList.add(\"hidden\");\n    } else {\n        state = [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        score = 0;\n        messageLose.classList.toggle(\"hidden\", true);\n        messageWin.classList.toggle(\"hidden\", true);\n    }\n    addTile();\n    addTile();\n    render();\n}\nfunction addTile() {\n    newState = state.slice();\n    var changed = false;\n    for(var i = 0; i < magicValue; i++){\n        for(var j = 0; j < magicValue; j++)if (state[i][j] !== newState[i][j]) {\n            changed = true;\n            break;\n        }\n        if (changed) break;\n    }\n    if (!changed) {\n        var _findEmptyCell = _sliced_to_array(findEmptyCell(), 2), y = _findEmptyCell[0], x = _findEmptyCell[1];\n        state[y][x] = randomNumber();\n    }\n}\nfunction findEmptyCell() {\n    var emptyCells = [];\n    state.forEach(function(row, rowIndex) {\n        row.forEach(function(cell, columnIndex) {\n            if (cell === 0) emptyCells.push([\n                rowIndex,\n                columnIndex\n            ]);\n        });\n    });\n    return emptyCells[Math.floor(Math.random() * emptyCells.length)];\n}\nfunction randomNumber() {\n    return Math.random() >= 0.9 ? 4 : 2;\n}\nfunction render() {\n    state.forEach(function(row, rowIndex) {\n        row.forEach(function(cell, columnIndex) {\n            var elem = fieldMatrix[rowIndex][columnIndex];\n            elem.classList = \"field-cell\";\n            if (cell === 0) elem.innerText = \"\";\n            else {\n                elem.innerText = cell;\n                elem.classList.add(\"field-cell--\".concat(cell));\n            }\n        });\n    });\n    scoreField.innerText = score;\n}\nfunction move(e) {\n    newState = state;\n    switch(e.key){\n        case DIR.Left:\n            left();\n            break;\n        case DIR.Right:\n            right();\n            break;\n        case DIR.Down:\n            down();\n            break;\n        case DIR.Up:\n            up();\n            break;\n        default:\n            return;\n    }\n    for(var i = 0; i < magicValue; i++){\n        for(var j = 0; j < magicValue; j++)if (newState[i][j] !== state[i][j]) {\n            state = newState;\n            addTile();\n            render();\n            if (isWin) {\n                messageWin.classList.remove(\"hidden\");\n                return;\n            }\n            if (!isPosibleToMove()) messageLose.classList.remove(\"hidden\");\n            return;\n        }\n    }\n}\nfunction left() {\n    if (!checkRows()) return;\n    newState = newState.map(function(row) {\n        var newRow = row.filter(function(cell) {\n            return cell !== 0;\n        });\n        newRow.forEach(function(cell, index) {\n            if (cell === newRow[index + 1]) {\n                newRow[index] *= 2;\n                newRow.splice(index + 1, 1);\n                score += newRow[index];\n                if (newRow[index] === 2048) isWin = true;\n            }\n        });\n        return newRow.concat(Array(4 - newRow.length).fill(0));\n    });\n}\nfunction reverseRows() {\n    newState.forEach(function(row) {\n        return row.reverse();\n    });\n}\nfunction right() {\n    if (!checkRows()) return;\n    reverseRows();\n    left();\n    reverseRows();\n}\nfunction transposeState() {\n    newState = newState[0].map(function(_, colIndex) {\n        return newState.map(function(row) {\n            return row[colIndex];\n        });\n    });\n}\nfunction up() {\n    transposeState();\n    left();\n    transposeState();\n}\nfunction down() {\n    transposeState();\n    right();\n    transposeState();\n}\nfunction isPosibleToMove() {\n    if (checkRows()) return true;\n    transposeState();\n    return checkColumns();\n}\nfunction checkRows() {\n    var _loop = function(i) {\n        if (newState[i].some(function(cell) {\n            return cell === 0;\n        }) || newState[i].some(function(cell, j) {\n            return cell === newState[i][j + 1];\n        })) return {\n            v: true\n        };\n    };\n    for(var i = 0; i < magicValue; i++){\n        var _ret = _loop(i);\n        if (_type_of(_ret) === \"object\") return _ret.v;\n    }\n    return false;\n}\nfunction checkColumns() {\n    var _loop = function(i) {\n        if (newState[i].some(function(cell, j) {\n            return cell === newState[i][j + 1];\n        })) return {\n            v: true\n        };\n    };\n    for(var i = 0; i < magicValue; i++){\n        var _ret = _loop(i);\n        if (_type_of(_ret) === \"object\") return _ret.v;\n    }\n    return false;\n}\n\n//# sourceMappingURL=index.436ac2b6.js.map\n","'use strict';\n\nconst DIR = {\n  Left: 'ArrowLeft',\n  Right: 'ArrowRight',\n  Down: 'ArrowDown',\n  Up: 'ArrowUp',\n};\n\nconst magicValue = 4;\n\nconst button = document.querySelector('button');\n\nconst messageStart = document.querySelector('.message-start');\nconst messageLose = document.querySelector('.message-lose');\nconst messageWin = document.querySelector('.message-win');\nconst field = document.querySelector('tbody');\nconst scoreField = document.querySelector('.game-score');\n\nlet state = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\n\nlet newState;\nlet isWin = false;\nlet score = 0;\nconst fieldMatrix = [...field.children].map(row => [...row.children]);\n\nbutton.addEventListener('click', buttonHandler);\ndocument.addEventListener('keydown', move);\n\nfunction buttonHandler() {\n  if (button.classList.contains('start')) {\n    button.classList.remove('start');\n    button.classList.add('restart');\n    button.innerText = 'Restart';\n    messageStart.classList.add('hidden');\n  } else {\n    state = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n\n    score = 0;\n    messageLose.classList.toggle('hidden', true);\n    messageWin.classList.toggle('hidden', true);\n  }\n\n  addTile();\n  addTile();\n  render();\n}\n\nfunction addTile() {\n  newState = state.slice();\n\n  let changed = false;\n\n  for (let i = 0; i < magicValue; i++) {\n    for (let j = 0; j < magicValue; j++) {\n      if (state[i][j] !== newState[i][j]) {\n        changed = true;\n        break;\n      }\n    }\n\n    if (changed) {\n      break;\n    }\n  }\n\n  if (!changed) {\n    const [y, x] = findEmptyCell();\n\n    state[y][x] = randomNumber();\n  }\n}\n\nfunction findEmptyCell() {\n  const emptyCells = [];\n\n  state.forEach((row, rowIndex) => {\n    row.forEach((cell, columnIndex) => {\n      if (cell === 0) {\n        emptyCells.push([rowIndex, columnIndex]);\n      }\n    });\n  });\n\n  return emptyCells[Math.floor(Math.random() * emptyCells.length)];\n}\n\nfunction randomNumber() {\n  return Math.random() >= 0.9 ? 4 : 2;\n}\n\nfunction render() {\n  state.forEach((row, rowIndex) => {\n    row.forEach((cell, columnIndex) => {\n      const elem = fieldMatrix[rowIndex][columnIndex];\n\n      elem.classList = 'field-cell';\n\n      if (cell === 0) {\n        elem.innerText = '';\n      } else {\n        elem.innerText = cell;\n        elem.classList.add(`field-cell--${cell}`);\n      }\n    });\n  });\n\n  scoreField.innerText = score;\n}\n\nfunction move(e) {\n  newState = state;\n\n  switch (e.key) {\n    case DIR.Left:\n      left();\n      break;\n\n    case DIR.Right:\n      right();\n      break;\n\n    case DIR.Down:\n      down();\n      break;\n\n    case DIR.Up:\n      up();\n      break;\n\n    default:\n      return;\n  }\n\n  for (let i = 0; i < magicValue; i++) {\n    for (let j = 0; j < magicValue; j++) {\n      if (newState[i][j] !== state[i][j]) {\n        state = newState;\n        addTile();\n        render();\n\n        if (isWin) {\n          messageWin.classList.remove('hidden');\n\n          return;\n        }\n\n        if (!isPosibleToMove()) {\n          messageLose.classList.remove('hidden');\n        }\n\n        return;\n      }\n    }\n  }\n}\n\nfunction left() {\n  if (!checkRows()) {\n    return;\n  }\n\n  newState = newState.map(row => {\n    const newRow = row.filter(cell => cell !== 0);\n\n    newRow.forEach((cell, index) => {\n      if (cell === newRow[index + 1]) {\n        newRow[index] *= 2;\n        newRow.splice(index + 1, 1);\n        score += newRow[index];\n\n        if (newRow[index] === 2048) {\n          isWin = true;\n        }\n      }\n    });\n\n    return newRow.concat(Array(4 - newRow.length).fill(0));\n  });\n}\n\nfunction reverseRows() {\n  newState.forEach(row => row.reverse());\n}\n\nfunction right() {\n  if (!checkRows()) {\n    return;\n  }\n\n  reverseRows();\n  left();\n  reverseRows();\n}\n\nfunction transposeState() {\n  newState = newState[0]\n    .map((_, colIndex) => newState.map(row => row[colIndex]));\n}\n\nfunction up() {\n  transposeState();\n  left();\n  transposeState();\n}\n\nfunction down() {\n  transposeState();\n  right();\n  transposeState();\n}\n\nfunction isPosibleToMove() {\n  if (checkRows()) {\n    return true;\n  }\n\n  transposeState();\n\n  return checkColumns();\n}\n\nfunction checkRows() {\n  for (let i = 0; i < magicValue; i++) {\n    if (newState[i].some(cell => cell === 0)\n      || newState[i].some((cell, j) => cell === newState[i][j + 1])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction checkColumns() {\n  for (let i = 0; i < magicValue; i++) {\n    if (newState[i].some((cell, j) => cell === newState[i][j + 1])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","_non_iterable_spread","TypeError","_type_of","obj","constructor","o","minLen","n","Object","prototype","toString","call","slice","name","test","newState","DIR","Left","Right","Down","Up","button","document","querySelector","messageStart","messageLose","messageWin","field","scoreField","state","isWin","score","fieldMatrix","children","map","row","addTile","changed","j","emptyCells","_findEmptyCell","forEach","rowIndex","cell","columnIndex","push","_array_with_holes","Math","floor","random","_iterable_to_array_limit","_s","_e","_i","_arr","_n","_d","next","done","value","err","_non_iterable_rest","y","x","render","elem","classList","innerText","add","concat","left","checkRows","newRow","filter","index","splice","fill","reverseRows","reverse","right","transposeState","_","colIndex","_loop","some","v","_ret","addEventListener","contains","remove","toggle","e","key","checkColumns"],"version":3,"file":"index.436ac2b6.js.map"}